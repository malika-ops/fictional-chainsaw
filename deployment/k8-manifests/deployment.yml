apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfc-referential-api-deployment
  namespace: #{k8sNamespace}#
  labels:
    app: wfc-referential-api
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wfc-referential-api
      version: v1
  template:
    metadata:
      labels:
        app: wfc-referential-api
        version: v1
    spec:
      imagePullSecrets:
      - name: harbor-image-pull-secret
      containers:
      - name: wfc-referential-api
        image: registry.wafacash.com/#{imageRepository}#:#{tag}#
        ports:
        - containerPort: 8080
          name: https
          protocol: TCP
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        - name: tls-certs
          mountPath: /app/certs
          readOnly: true
        - name: config-volume
          mountPath: /app/appsettings.json
          subPath: appsettings.json
          readOnly: false
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
        - name: logs-volume
          persistentVolumeClaim:
            claimName: wfc-referential-api-disk-pvc
        - name: tls-certs
          secret:
            secretName: tls-secret-phoenix-ca-root
        - name: env-config
          configMap:
            name: dotnet-app-env-config
        - name: config-volume
          configMap:
            name: wfc-referential-api-config
            items:
            - key: appsettings.json
              path: appsettings.json 
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      #This rule helps spread them out across nodes when possible
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - wfc-referential-api
              topologyKey: kubernetes.io/hostname

---
# HorizontalPodAutoscaler configuration
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: wfc-referential-api-hpa
  namespace: #{k8sNamespace}#
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wfc-referential-api
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# PodDisruptionBudget for maintenance protection
#When to Use:
#For stateful applications where losing too many instances could cause issues
#To ensure high availability during cluster maintenance
#When you need to control the pace of pod terminations
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: wfc-referential-api-pdb
  namespace: #{k8sNamespace}#
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: wfc-referential-api